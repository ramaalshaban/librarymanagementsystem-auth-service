const mainFunctions = require("./main");

module.exports = {
  // main Database
  // User Db Object
  dbRegisterUser: mainFunctions.dbRegisterUser,
  dbUpdateUser: mainFunctions.dbUpdateUser,
  dbDeleteUser: mainFunctions.dbDeleteUser,
  dbUpdateUserrole: mainFunctions.dbUpdateUserrole,
  dbUpdatePassword: mainFunctions.dbUpdatePassword,
  dbGetUser: mainFunctions.dbGetUser,
  dbListUsers: mainFunctions.dbListUsers,
  createUser: mainFunctions.createUser,
  getIdListOfUserByField: mainFunctions.getIdListOfUserByField,
  getUserById: mainFunctions.getUserById,
  getUserAggById: mainFunctions.getUserAggById,
  getUserListByQuery: mainFunctions.getUserListByQuery,
  getUserStatsByQuery: mainFunctions.getUserStatsByQuery,
  getUserByQuery: mainFunctions.getUserByQuery,
  updateUserById: mainFunctions.updateUserById,
  updateUserByIdList: mainFunctions.updateUserByIdList,
  updateUserByQuery: mainFunctions.updateUserByQuery,
  deleteUserById: mainFunctions.deleteUserById,
  deleteUserByQuery: mainFunctions.deleteUserByQuery,
  getUserByEmail: mainFunctions.getUserByEmail,
  dbScriptGetUser: mainFunctions.dbScriptGetUser,
  dbScriptUpdateUser: mainFunctions.dbScriptUpdateUser,
  dbScriptRegisterUser: mainFunctions.dbScriptRegisterUser,
  dbScriptDeleteUser: mainFunctions.dbScriptDeleteUser,
  dbScriptListUsers: mainFunctions.dbScriptListUsers,
  // UserGroup Db Object
  dbCreateGroup: mainFunctions.dbCreateGroup,
  dbUpdateGroup: mainFunctions.dbUpdateGroup,
  dbGetGroup: mainFunctions.dbGetGroup,
  dbListGroups: mainFunctions.dbListGroups,
  createUserGroup: mainFunctions.createUserGroup,
  getIdListOfUserGroupByField: mainFunctions.getIdListOfUserGroupByField,
  getUserGroupById: mainFunctions.getUserGroupById,
  getUserGroupAggById: mainFunctions.getUserGroupAggById,
  getUserGroupListByQuery: mainFunctions.getUserGroupListByQuery,
  getUserGroupStatsByQuery: mainFunctions.getUserGroupStatsByQuery,
  getUserGroupByQuery: mainFunctions.getUserGroupByQuery,
  updateUserGroupById: mainFunctions.updateUserGroupById,
  updateUserGroupByIdList: mainFunctions.updateUserGroupByIdList,
  updateUserGroupByQuery: mainFunctions.updateUserGroupByQuery,
  deleteUserGroupById: mainFunctions.deleteUserGroupById,
  deleteUserGroupByQuery: mainFunctions.deleteUserGroupByQuery,

  // UserGroupMember Db Object
  dbCreateGroupmember: mainFunctions.dbCreateGroupmember,
  dbDeleteGroupmember: mainFunctions.dbDeleteGroupmember,
  dbGetGroupmember: mainFunctions.dbGetGroupmember,
  dbListGroupmembers: mainFunctions.dbListGroupmembers,
  createUserGroupMember: mainFunctions.createUserGroupMember,
  getIdListOfUserGroupMemberByField:
    mainFunctions.getIdListOfUserGroupMemberByField,
  getUserGroupMemberById: mainFunctions.getUserGroupMemberById,
  getUserGroupMemberAggById: mainFunctions.getUserGroupMemberAggById,
  getUserGroupMemberListByQuery: mainFunctions.getUserGroupMemberListByQuery,
  getUserGroupMemberStatsByQuery: mainFunctions.getUserGroupMemberStatsByQuery,
  getUserGroupMemberByQuery: mainFunctions.getUserGroupMemberByQuery,
  updateUserGroupMemberById: mainFunctions.updateUserGroupMemberById,
  updateUserGroupMemberByIdList: mainFunctions.updateUserGroupMemberByIdList,
  updateUserGroupMemberByQuery: mainFunctions.updateUserGroupMemberByQuery,
  deleteUserGroupMemberById: mainFunctions.deleteUserGroupMemberById,
  deleteUserGroupMemberByQuery: mainFunctions.deleteUserGroupMemberByQuery,

  // AuthShareToken Db Object
  createAuthShareToken: mainFunctions.createAuthShareToken,
  getIdListOfAuthShareTokenByField:
    mainFunctions.getIdListOfAuthShareTokenByField,
  getAuthShareTokenById: mainFunctions.getAuthShareTokenById,
  getAuthShareTokenAggById: mainFunctions.getAuthShareTokenAggById,
  getAuthShareTokenListByQuery: mainFunctions.getAuthShareTokenListByQuery,
  getAuthShareTokenStatsByQuery: mainFunctions.getAuthShareTokenStatsByQuery,
  getAuthShareTokenByQuery: mainFunctions.getAuthShareTokenByQuery,
  updateAuthShareTokenById: mainFunctions.updateAuthShareTokenById,
  updateAuthShareTokenByIdList: mainFunctions.updateAuthShareTokenByIdList,
  updateAuthShareTokenByQuery: mainFunctions.updateAuthShareTokenByQuery,
  deleteAuthShareTokenById: mainFunctions.deleteAuthShareTokenById,
  deleteAuthShareTokenByQuery: mainFunctions.deleteAuthShareTokenByQuery,
};
